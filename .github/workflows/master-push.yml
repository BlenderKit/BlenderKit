name: master-push

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  Checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install
        run: pip install isort
      - name: Running isort
        run: python -m isort . --check-only --diff
      - name: Server set to production
        run: python3 -c 'from global_vars import SERVER; assert SERVER == "https://www.blenderkit.com"'

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build add-on
        run: python dev.py build
      - name: Get current date and time
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d--%H-%M-%S')"
      - name: Store the build
        uses: actions/upload-artifact@v3
        with:
          name: blenderkit-${{ github.ref_name }}-${{ steps.date.outputs.date }}
          path: |
            out
            !out/blenderkit.zip

  make-tests-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: python .github/make-tests-matrix.py >> $GITHUB_OUTPUT
 
  TESTS:
    needs: make-tests-matrix
    continue-on-error: true
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.make-tests-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Download Blender
        run: curl ${{ matrix.download_url }} -o /home/runner/blender.tar.xz
      - name: Mkdir
        run: mkdir {/home/runner/.local/bin,/home/runner/blender} -p
      - name: Extract Blender
        run: tar -xf /home/runner/blender.tar.xz -C /home/runner/blender --strip-components=1
      - name: Add Blender to PATH
        run: ln -s /home/runner/blender/blender /home/runner/.local/bin/blender
      - name: TEST
        run: python dev.py test --install-at /home/runner/.config/blender/${{matrix.version_x_y}}/scripts/addons